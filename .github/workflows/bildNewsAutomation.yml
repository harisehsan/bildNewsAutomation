name: Mobile UI tests (self-hosted with Appium)

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: self-hosted
    timeout-minutes: 90

    defaults:
      run:
        shell: cmd

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: maven

      - name: Set up Node (for Appium 2)
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Appium 2 and UIAutomator2 driver (if not present)
        shell: bash
        run: |
          if ! command -v appium >/dev/null 2>&1; then
            npm i -g appium
          fi
          appium driver list --installed | grep -q uiautomator2 || appium driver install uiautomator2

      - name: Verify ADB and pick first connected device
        shell: bash
        run: |
          if ! command -v adb >/dev/null 2>&1; then
            echo "adb not found. Install Android SDK Platform-Tools and ensure 'adb' is on PATH." >&2
            exit 1
          fi

          echo "ADB devices:"
          adb devices -l || true

          UDID=$(adb devices | awk '/device$/{print $1; exit}')
          if [ -z "$UDID" ]; then
            echo "No ready Android device found (need a device listed as 'device')." >&2
            exit 1
          fi

          echo "Using first device: $UDID"
          echo "DEVICE_UDID=$UDID" >> "$GITHUB_ENV"

          ANDROID_VERSION=$(adb -s "$UDID" shell getprop ro.build.version.release | tr -d '\r')
          DEVICE_MODEL=$(adb -s "$UDID" shell getprop ro.product.model | tr -d '\r')
          echo "ANDROID_VERSION=$ANDROID_VERSION" >> "$GITHUB_ENV"
          echo "DEVICE_MODEL=$DEVICE_MODEL" >> "$GITHUB_ENV"
          echo "Detected $DEVICE_MODEL (Android $ANDROID_VERSION)"

      - name: Start Appium server (background)
        shell: bash
        run: |
          nohup appium --allow-insecure chromedriver_autodownload --base-path /wd/hub --log appium.log >/dev/null 2>&1 &
          for i in {1..60}; do
            if (echo > /dev/tcp/127.0.0.1/4723) >/dev/null 2>&1; then
              echo "Appium is up."
              break
            fi
            sleep 1
          done
          if ! (echo > /dev/tcp/127.0.0.1/4723) >/dev/null 2>&1; then
            echo "Appium failed to start." >&2
            tail -n +1 appium.log || true
            exit 1
          fi

      # ðŸ‘‡ Defaults to cmd now, so no PowerShell script => no policy error
      - name: Run tests (tag @bild_news_login)
        env:
          DEVICE_UDID: ${{ env.DEVICE_UDID }}
          ANDROID_VERSION: ${{ env.ANDROID_VERSION }}
          DEVICE_MODEL: ${{ env.DEVICE_MODEL }}
        run: mvn -B clean test -Dcucumber.filter.tags="@bild_news_login"

      - name: Generate Allure report
        if: always()
        run: mvn -B io.qameta.allure:allure-maven:report || exit /b 0

      - name: Upload Allure results (raw)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results
          if-no-files-found: warn
          retention-days: 14

      - name: Upload Allure HTML report (static)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/site/allure-maven-plugin
          if-no-files-found: warn
          retention-days: 14

      - name: Upload Appium server log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-log
          path: appium.log
          if-no-files-found: warn
          retention-days: 7